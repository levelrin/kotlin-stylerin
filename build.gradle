import com.github.spotbugs.snom.Confidence
import com.github.spotbugs.snom.Effort

plugins {
    id 'java'
    id 'antlr'
    id 'com.github.spotbugs' version '6.1.3'
    id 'pmd'
    id 'checkstyle'
}

group = 'com.levelrin'
version = '0.0.1'

sourceSets {
    main {
        java {
            // We will generate the parser in this directory using Antlr.
            // We need to add this directory to the main source set to use the generated classes in our code.
            srcDirs("$buildDir/generated-src/antlr/main")
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    antlr 'org.antlr:antlr4:4.13.2'
    spotbugs('com.github.spotbugs:spotbugs:4.8.6')
    implementation 'org.slf4j:slf4j-simple:2.0.13'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.hamcrest:hamcrest:3.0'
}

test {
    useJUnitPlatform()
}

spotbugs {
    toolVersion = '4.9.1'
    ignoreFailures = false
    effort = Effort.MAX
    // We had to use the magic number due to a SpotBugs' bug.
    // https://github.com/spotbugs/spotbugs-gradle-plugin/issues/972
    // 0: LOW, 1: MEDIUM, 2: DEFAULT, 3: HIGH
    reportLevel = Confidence.values()[0]
    excludeFilter = file('config/spotbugs/exclude.xml')
}
tasks.spotbugsMain {
    reports.create('html') {
        required = true
        outputLocation = file("$buildDir/spotbugs/main/spotbugs.html")
        setStylesheet('fancy-hist.xsl')
    }
}
tasks.spotbugsTest {
    reports.create('html') {
        required = true
        outputLocation = file("$buildDir/spotbugs/test/spotbugs.html")
        setStylesheet('fancy-hist.xsl')
    }
}

pmd {
    toolVersion = '7.0.0'
    ignoreFailures = false
    ruleSetFiles = files('config/pmd/ruleSet.xml')
    ruleSets = []
    pmdMain {
        excludes = [
            '**/generated/*.java'
        ]
    }
}
tasks.withType(Pmd) {
    reports {
        xml.required = false
        html.required = true
    }
}

checkstyle {
    toolVersion '10.21.2'
    ignoreFailures = false
    configFile = file('config/checkstyle/checkstyle.xml')
    configProperties = [
        'checkstyle.suppression.file': file('config/checkstyle/suppression.xml')
    ]
}
tasks.withType(Checkstyle) {
    reports {
        xml.required = false
        html.required = true
    }
    exclude '**/generated/**'
}

generateGrammarSource {
    maxHeapSize = '64m'
    arguments += [
        '-visitor',
        '-long-messages'
    ]
    // Since we will add the package declaration, we must put generated classes in the package folder.
    outputDirectory = file("$buildDir/generated-src/antlr/main/com/levelrin/antlr/generated")
}
